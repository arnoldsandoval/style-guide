{% extends "layout.nunjucks" %}
{% import "partials/helpers.nunjucks" as utils %}

{% block title %}Grid{% endblock %}

{% block header %}
  {% set pageName = "Grid" %}
  {% include "partials/header.nunjucks" %}
{% endblock %}

{% block content %}

<section class="docs-simplesheet__section">
  <div class="container">
    <div class="row">
      <div class="col-12@sm">
        <h1 class="docs-type-header-1">12-Column Responsive Grid</h1>
        <blockquote class="docs-blockquote">
          <p>This site uses a 12-column responsive grid system to which all modules align.</p>
        </blockquote>
        <div>
          <button data-target="#no-grid" data-is-open="true" class="btn js-section-toggle">Hide</button>
        </div>
      </div>
    </div>
  </div>
  <div id="no-grid" class="spacer-top-small">
    <div class="container">
      <div class="row">
        <div class="col-12@sm">
          <p class="docs-type-body-2">Drag your browser window width to see how the grid flexes.</p>
          <p class="docs-type-body-2">
            Grid columns can be changed at breakpoints:
            <code>xs</code>, <code>sm</code>, <code>md</code>, and <code>lg</code>.
          </p>
        </div>
      </div>
    </div>
    <div class="docs-grid-example">
      <div class="container">
        <div class="row">
          {{ utils.grid_columns(1, 12) }}
        </div>
        <div class="row">
          {{ utils.grid_columns(2, 6) }}
        </div>
        <div class="row">
          {{ utils.grid_columns(3, 4) }}
        </div>
        <div class="row">
          {{ utils.grid_columns(4, 3) }}
        </div>
        <div class="row">
          {{ utils.grid_columns(6, 2) }}
        </div>
        <div class="row">
          {{ utils.grid_columns(12, 1) }}
        </div>
      </div>
    </div>
    <div class="container spacer-top-small">
      <div class="row">
        <div class="col-12@sm">
          <h3 class="docs-type-header-4">Markup</h3>
          <div>
            <pre><code class="language-markup">&lt;div class="container"&gt;
  &lt;div class="row"&gt;
    &lt;div class="col-1@sm"&gt;1&lt;/div&gt;
    &lt;div class="col-1@sm"&gt;1&lt;/div&gt;
    &lt;div class="col-1@sm"&gt;1&lt;/div&gt;
    &lt;div class="col-1@sm"&gt;1&lt;/div&gt;
    &lt;div class="col-1@sm"&gt;1&lt;/div&gt;
    &lt;div class="col-1@sm"&gt;1&lt;/div&gt;
    &lt;div class="col-1@sm"&gt;1&lt;/div&gt;
    &lt;div class="col-1@sm"&gt;1&lt;/div&gt;
    &lt;div class="col-1@sm"&gt;1&lt;/div&gt;
    &lt;div class="col-1@sm"&gt;1&lt;/div&gt;
    &lt;div class="col-1@sm"&gt;1&lt;/div&gt;
    &lt;div class="col-1@sm"&gt;1&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="row"&gt;
    &lt;div class="col-2@sm"&gt;2&lt;/div&gt;
    &lt;div class="col-2@sm"&gt;2&lt;/div&gt;
    &lt;div class="col-2@sm"&gt;2&lt;/div&gt;
    &lt;div class="col-2@sm"&gt;2&lt;/div&gt;
    &lt;div class="col-2@sm"&gt;2&lt;/div&gt;
    &lt;div class="col-2@sm"&gt;2&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="row"&gt;
    &lt;div class="col-3@sm"&gt;3&lt;/div&gt;
    &lt;div class="col-3@sm"&gt;3&lt;/div&gt;
    &lt;div class="col-3@sm"&gt;3&lt;/div&gt;
    &lt;div class="col-3@sm"&gt;3&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="row"&gt;
    &lt;div class="col-4@sm"&gt;4&lt;/div&gt;
    &lt;div class="col-4@sm"&gt;4&lt;/div&gt;
    &lt;div class="col-4@sm"&gt;4&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="row"&gt;
    &lt;div class="col-6@sm"&gt;6&lt;/div&gt;
    &lt;div class="col-6@sm"&gt;6&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="row"&gt;
    &lt;div class="col-12@sm"&gt;12&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
</div></code></pre>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>
<section class="docs-simplesheet__section" id="mobile-grid-title">
  <div class="container">
    <div class="row">
      <div class="col-12@sm">
        <h2 class="docs-type-header-2">Mobile Grid</h2>
        <p class="docs-type-body-1">Unlike the tablet/desktop grid, the mobile grid is made up of 6 columns.</p>
        <div>
          <button data-target="#mobile-grid" data-is-open="false" class="btn js-section-toggle">Show</button>
        </div>
      </div>
    </div>
  </div>
  <div id="mobile-grid" class="spacer-top-small" hidden>
    <div class="container">
      <div class="row">
        <div class="col-12@sm">
          <p class="docs-type-body-2">These are specified with the <code>xs</code> breakpoint in the class name.
          </p>
        </div>
      </div>
    </div>
    <div class="docs-grid-example">
      <div class="container">
        <div class="row">
          <div class="col-4@xs col-4@sm">
            {{ utils.grid_column_inner("col-4@xs col-4@sm") }}
          </div>
          <div class="col-1@xs col-4@sm">
            {{ utils.grid_column_inner("col-1@xs col-4@sm") }}
          </div>
          <div class="col-1@xs col-4@sm">
            {{ utils.grid_column_inner("col-1@xs col-4@sm") }}
          </div>
        </div>
        <div class="row">
          <div class=" col-3@xs col-2@sm">
            {{ utils.grid_column_inner(" col-3@xs col-2@sm") }}
          </div>
          <div class="col-3@xs col-5@sm">
            {{ utils.grid_column_inner("col-3@xs col-5@sm") }}
          </div>
          <div class="col-6@xs col-5@sm">
            {{ utils.grid_column_inner("col-6@xs col-5@sm") }}
          </div>
        </div>
      </div>
    </div>
    <div class="container">
      <div class="row spacer-top-small">
        <div class="col-12@sm">
          <h3 class="docs-type-header-4">Markup</h3>
          <div>
            <pre><code class="language-markup">&lt;div class="container"&gt;
  &lt;div class="row"&gt;
    &lt;div class="col-4@sm col-4@xs"&gt;col-4@sm col-4@xs&lt;/div&gt;
    &lt;div class="col-4@sm col-1@xs"&gt;col-4@sm col-1@xs&lt;/div&gt;
    &lt;div class="col-4@sm col-1@xs"&gt;col-4@sm col-1@xs&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="row"&gt;
    &lt;div class="col-2@sm col-3@xs"&gt;col-2@sm col-3@xs&lt;/div&gt;
    &lt;div class="col-5@sm col-3@xs"&gt;col-5@sm col-3@xs&lt;/div&gt;
    &lt;div class="col-5@sm col-6@xs"&gt;col-5@sm col-6@xs&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;</code></pre>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>
<section class="docs-simplesheet__section" id="nested-grid-title">
  <div class="container">
    <div class="row">
      <div class="col-12@sm">
        <h2 class="docs-type-header-2">Nested Grid</h2>
        <p class="docs-type-body-1">Nesting is accomplished by adding another element with the row class inside the column.</p>
        <div>
          <button data-target="#nested" data-is-open="false" class="btn js-section-toggle">Show</button>
        </div>
      </div>
    </div>
  </div>
  <div id="nested" class="spacer-top-small" hidden>
    <div class="docs-grid-example">
      <div class="container">
        <div class="row">
          <div class="col-6@sm">
            <div class="row">
              <div class="col-6@sm">
                {{ utils.grid_column_inner("n - half") }}
              </div>
              <div class="col-6@sm">
                <div class="row">
                  <div class="col-6@sm">
                    {{ utils.grid_column_inner("n - n - half") }}
                  </div>
                  <div class="col-6@sm">
                    {{ utils.grid_column_inner("n - n - half") }}
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div class="col-4@sm">
            {{ utils.grid_column_inner("4") }}
          </div>
          <div class="col-2@sm">
            <div class="row">
              <div class="col-6@sm">
                {{ utils.grid_column_inner("n - half") }}
              </div>
              <div class="col-6@sm">
                {{ utils.grid_column_inner("n - half") }}
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <div class="container">
      <div class="row">
        <div class="col-12@sm">
          <h3 class="docs-type-header-4">Markup</h3>
          <div>
            <pre><code class="language-markup">&lt;div class="container"&gt;
  &lt;div class="row"&gt;
    &lt;div class="col-6@sm"&gt;
      &lt;div class="row"&gt;
        &lt;div class="col-6@sm"&gt;n - half&lt;/div&gt;
        &lt;div class="col-6@sm"&gt;
          &lt;div class="row"&gt;
            &lt;div class="col-6@sm"&gt;n - n - half&lt;/div&gt;
            &lt;div class="col-6@sm"&gt;n - n - half&lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="col-4@sm"&gt;4&lt;/div&gt;
    &lt;div class="col-2@sm"&gt;
      &lt;div class="row"&gt;
        &lt;div class="col-6@sm"&gt;n - half&lt;/div&gt;
        &lt;div class="col-6@sm"&gt;n - half&lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;</code></pre>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>
<section class="docs-simplesheet__section" id="push-and-pull">
  <div class="container">
    <div class="row">
      <div class="col-12@sm">
        <h2 class="docs-type-header-2">Push and Pull</h2>
        <p class="docs-type-body-1">Grid columns can be pushed and pulled to make them appear after/before another column even though the source order would make it before/after.</p>
        <div>
          <button data-target="#push-pull" data-is-open="false" class="btn js-section-toggle">Show</button>
        </div>
      </div>
    </div>
  </div>


  <div id="push-pull" class="spacer-top-small" hidden>
    <div class="container">
      <div class="row">
        <div class="col-12@sm">
          <p class="docs-type-body-2">Note that the <code>C</code> â€“ <code>F</code> example below doesn&apos;t work when <code>C</code> and <code>D</code> are different heights.</p>
        </div>
      </div>
    </div>
    <div class="docs-grid-example">
      <div class="container">
        <div class="row">
          <div class="col-4@sm col-offset-1@sm col-push-7@sm">
            {{ utils.grid_column_inner("A") }}
          </div>
          <div class="col-7@sm col-pull-5@sm">
            {{ utils.grid_column_inner("B") }}
          </div>
        </div>
        <div class="row">
          <div class="col-6@xs col-6@sm col-push-6@sm">
            {{ utils.grid_column_inner("C") }}
          </div>
          <div class="col-3@xs col-6@sm col-pull-6@sm">
            {{ utils.grid_column_inner("D") }}
          </div>
        </div>
        <div class="row">
          <div class="col-3@xs col-3@sm col-push-6@sm">
            {{ utils.grid_column_inner("E") }}
          </div>
          <div class="col-6@xs col-6@sm col-pull-3@sm">
            {{ utils.grid_column_inner("F") }}
          </div>
        </div>
      </div>
    </div>
    <div class="container">
      <div class="row spacer-top-small">
        <div class="col-12@sm">
          <h3 class="docs-type-header-4">Markup</h3>
          <div>
            <pre><code class="language-markup">&lt;div class="container"&gt;
  &lt;div class="row"&gt;
    &lt;div class="col-4@sm col-offset-1@sm col-push-7@sm"&gt;A&lt;/div&gt;
    &lt;div class="col-4@sm col-pull-5@sm"&gt;B&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="row"&gt;
    &lt;div class="col-6@sm col-6@xs col-push-6@sm"&gt;C&lt;/div&gt;
    &lt;div class="col-6@sm col-3@xs col-pull-6@sm"&gt;D&lt;/div&gt;
    &lt;div class="col-3@sm col-3@xs col-push-6@sm"&gt;E&lt;/div&gt;
    &lt;div class="col-6@sm col-6@xs col-pull-3@sm"&gt;F&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;</code></pre>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>
<section class="docs-simplesheet__section" id="gutterless-grid">
  <div class="container">
    <div class="row">
      <div class="col-12@sm">
        <h2 class="docs-type-header-2">Gutterless Grid</h2>
        <p class="docs-type-body-1">There is also a "gutterless" grid option, which stacks all columns right next to each other. Add <code>.row--gutterless</code> to any <code>.row</code> element, and will affect all screen sizes.</p>
        <div class="spacer-btm-small">
          <button data-target="#gutterless" data-is-open="false" class="btn js-section-toggle">Show</button>
        </div>
      </div>
    </div>
  </div>
  <div id="gutterless" class="spacer-top-small" hidden>
    <div class="container">
      <div class="row">
        <div class="col-12@sm">
          <p class="docs-type-body-2"><code>.row--gutterless</code>:</p>
        </div>
      </div>
    </div>
    <div class="docs-grid-example">
      <div class="container">
        <div class="row row--gutterless">
          <div class="col-3@sm">
            {{ utils.grid_column_inner("col-3@sm") }}
          </div>
          <div class="col-3@sm">
            {{ utils.grid_column_inner("col-3@sm") }}
          </div>
          <div class="col-3@xs col-3@sm">
            {{ utils.grid_column_inner("col-3@xs col-3@sm") }}
          </div>
          <div class="col-3@xs col-3@sm">
            {{ utils.grid_column_inner("col-3@xs col-3@sm") }}
          </div>
        </div>
        <div class="row row--gutterless">
          <div class="col-6@sm">
            {{ utils.grid_column_inner("col-6@sm") }}
          </div>
          <div class="col-6@sm">
            {{ utils.grid_column_inner("col-6@sm") }}
          </div>
        </div>
      </div>
    </div>
    <div class="container spacer-top-small">
      <div class="row">
        <div class="col-12@sm">
          <p class="docs-type-body-2">There are also layout-specific gutterless options: <code>.row--gutterless@xs</code> will only apply to mobile, and <code>.row--gutterless@sm</code> to tablet/desktop+</p>
          <p class="docs-type-body-2"><code>.row--gutterless@xs</code>:</p>
        </div>
      </div>
    </div>
    <div class="docs-grid-example">
      <div class="container">
        <div class="row row--gutterless@xs">
          <div class="col-3@xs col-6@sm">
            {{ utils.grid_column_inner("col-3@xs col-6@sm") }}
          </div>
          <div class="col-3@xs col-6@sm">
            {{ utils.grid_column_inner("col-3@xs col-6@sm") }}
          </div>
        </div>
      </div>
    </div>
    <div class="container spacer-top-small">
      <div class="row">
        <div class="col-12@sm">
          <p class="docs-type-body-2"><code>.row--gutterless@sm</code>:</p>
        </div>
      </div>
    </div>
    <div class="docs-grid-example">
      <div class="container">
        <div class="row row--gutterless@sm">
          <div class="col-3@xs col-6@sm">
            {{ utils.grid_column_inner("col-3@xs col-6@sm") }}
          </div>
          <div class="col-3@xs col-6@sm">
            {{ utils.grid_column_inner("col-3@xs col-6@sm") }}
          </div>
        </div>
      </div>
    </div>
    <div class="container">
      <div class="row spacer-top-small">
        <div class="col-12@sm">
          <h3 class="docs-type-header-4">Markup</h3>
          <div>
            <pre><code class="language-markup">&lt;div class="container"&gt;
  &lt;div class="row row--gutterless"&gt;
    &lt;div class="col-3@sm"&gt;3&lt;/div&gt;
    &lt;div class="col-3@sm"&gt;3&lt;/div&gt;
    &lt;div class="col-3@xs col-3@sm"&gt;col-3@xs col-3@sm&lt;/div&gt;
    &lt;div class="col-3@xs col-3@sm"&gt;col-3@xs col-3@sm&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="row row--gutterless"&gt;
    &lt;div class="col-6@sm"&gt;6&lt;/div&gt;
    &lt;div class="col-6@sm"&gt;6&lt;/div&gt;
  &lt;/div&gt;

  &lt;div class="row row--gutterless@xs"&gt;
    &lt;div class="col-3@xs col-6@sm"&gt;col-3@xs col-6@sm&lt;/div&gt;
    &lt;div class="col-3@xs col-6@sm"&gt;col-3@xs col-6@sm&lt;/div&gt;
  &lt;/div&gt;

  &lt;div class="row row--gutterless@sm"&gt;
    &lt;div class="col-3@xs col-6@sm"&gt;col-3@xs col-6@sm&lt;/div&gt;
    &lt;div class="col-3@xs col-6@sm"&gt;col-3@xs col-6@sm&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;</code></pre>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>
<section class="docs-simplesheet__section" id="full-bleed-grid">
  <div class="container">
    <div class="row">
      <div class="col-12@sm">
        <h2 class="docs-type-header-2">Full-bleed</h2>
        <p class="docs-type-body-1">The <code>.container</code> element can be made full-bleed at <code>xs</code> by adding <code>--full@xs</code>. You still need to also include the base <code>.container</code> class. Because this class does not affect rows, you also need to remove the negative margins from by adding <code>.row--gutterless@xs</code></p>
        <div>
          <button data-target="#fullbleed" data-is-open="false" class="btn js-section-toggle">Show</button>
        </div>
      </div>
    </div>
  </div>
  <div id="fullbleed" class="spacer-top-small" hidden>
    <div class="docs-grid-example">
      <div class="container container--full@xs">
        <div class="row row--gutterless@xs">
          <div class="col-12@sm">
            {{ utils.grid_column_inner("container--full@xs row--gutterless@xs") }}
          </div>
        </div>
      </div>
    </div>
    <div class="container">
      <div class="row spacer-top-small">
        <div class="col-12@sm">
          <h3 class="docs-type-header-4">Markup</h3>
          <pre><code class="language-markup">&lt;div class="container container--full@xs"&gt;
  &lt;div class="row row--gutterless@xs"&gt;
    &lt;div class="col-12@sm"&gt;container--full@xs row--gutterless@xs&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;</code></pre>
        </div>
      </div>
    </div>
  </div>
</section>

{% endblock %}
